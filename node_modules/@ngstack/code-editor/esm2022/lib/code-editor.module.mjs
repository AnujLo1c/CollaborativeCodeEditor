import { APP_INITIALIZER, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { CodeEditorComponent } from './code-editor/code-editor.component';
import { CodeEditorService, EDITOR_SETTINGS } from './services/code-editor.service';
import { TypescriptDefaultsService } from './services/typescript-defaults.service';
import { JavascriptDefaultsService } from './services/javascript-defaults.service';
import { JsonDefaultsService } from './services/json-defaults.service';
import * as i0 from "@angular/core";
export function setupEditorService(service) {
    return () => service.loadEditor();
}
export function provideCodeEditor(settings) {
    return [
        { provide: EDITOR_SETTINGS, useValue: settings },
        CodeEditorService,
        TypescriptDefaultsService,
        JavascriptDefaultsService,
        JsonDefaultsService,
        {
            provide: APP_INITIALIZER,
            useFactory: setupEditorService,
            deps: [CodeEditorService],
            multi: true,
        },
    ];
}
/** @deprecated use `provideCodeEditor(settings)` instead */
export class CodeEditorModule {
    static forRoot(settings) {
        return {
            ngModule: CodeEditorModule,
            providers: [
                { provide: EDITOR_SETTINGS, useValue: settings },
                CodeEditorService,
                {
                    provide: APP_INITIALIZER,
                    useFactory: setupEditorService,
                    deps: [CodeEditorService],
                    multi: true,
                },
            ],
        };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.10", ngImport: i0, type: CodeEditorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "18.2.10", ngImport: i0, type: CodeEditorModule, imports: [CommonModule, CodeEditorComponent], exports: [CodeEditorComponent] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "18.2.10", ngImport: i0, type: CodeEditorModule, imports: [CommonModule] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.10", ngImport: i0, type: CodeEditorModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, CodeEditorComponent],
                    exports: [CodeEditorComponent],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29kZS1lZGl0b3IubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29kZS1lZGl0b3Ivc3JjL2xpYi9jb2RlLWVkaXRvci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGVBQWUsRUFBdUIsUUFBUSxFQUFZLE1BQU0sZUFBZSxDQUFDO0FBQ3pGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUMxRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsZUFBZSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFFcEYsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDbkYsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDbkYsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7O0FBRXZFLE1BQU0sVUFBVSxrQkFBa0IsQ0FBQyxPQUEwQjtJQUMzRCxPQUFPLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQUUsQ0FBQztBQUNwQyxDQUFDO0FBRUQsTUFBTSxVQUFVLGlCQUFpQixDQUFDLFFBQTZCO0lBQzdELE9BQU87UUFDTCxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRTtRQUNoRCxpQkFBaUI7UUFDakIseUJBQXlCO1FBQ3pCLHlCQUF5QjtRQUN6QixtQkFBbUI7UUFDbkI7WUFDRSxPQUFPLEVBQUUsZUFBZTtZQUN4QixVQUFVLEVBQUUsa0JBQWtCO1lBQzlCLElBQUksRUFBRSxDQUFDLGlCQUFpQixDQUFDO1lBQ3pCLEtBQUssRUFBRSxJQUFJO1NBQ1o7S0FDRixDQUFDO0FBQ0osQ0FBQztBQUVELDREQUE0RDtBQUs1RCxNQUFNLE9BQU8sZ0JBQWdCO0lBQzNCLE1BQU0sQ0FBQyxPQUFPLENBQ1osUUFBNkI7UUFFN0IsT0FBTztZQUNMLFFBQVEsRUFBRSxnQkFBZ0I7WUFDMUIsU0FBUyxFQUFFO2dCQUNULEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFO2dCQUNoRCxpQkFBaUI7Z0JBQ2pCO29CQUNFLE9BQU8sRUFBRSxlQUFlO29CQUN4QixVQUFVLEVBQUUsa0JBQWtCO29CQUM5QixJQUFJLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQztvQkFDekIsS0FBSyxFQUFFLElBQUk7aUJBQ1o7YUFDRjtTQUNGLENBQUM7SUFDSixDQUFDOytHQWpCVSxnQkFBZ0I7Z0hBQWhCLGdCQUFnQixZQUhqQixZQUFZLEVBQUUsbUJBQW1CLGFBQ2pDLG1CQUFtQjtnSEFFbEIsZ0JBQWdCLFlBSGpCLFlBQVk7OzRGQUdYLGdCQUFnQjtrQkFKNUIsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsbUJBQW1CLENBQUM7b0JBQzVDLE9BQU8sRUFBRSxDQUFDLG1CQUFtQixDQUFDO2lCQUMvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFQUF9JTklUSUFMSVpFUiwgTW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUsIFByb3ZpZGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgQ29kZUVkaXRvckNvbXBvbmVudCB9IGZyb20gJy4vY29kZS1lZGl0b3IvY29kZS1lZGl0b3IuY29tcG9uZW50JztcbmltcG9ydCB7IENvZGVFZGl0b3JTZXJ2aWNlLCBFRElUT1JfU0VUVElOR1MgfSBmcm9tICcuL3NlcnZpY2VzL2NvZGUtZWRpdG9yLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29kZUVkaXRvclNldHRpbmdzIH0gZnJvbSAnLi9lZGl0b3Itc2V0dGluZ3MnO1xuaW1wb3J0IHsgVHlwZXNjcmlwdERlZmF1bHRzU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvdHlwZXNjcmlwdC1kZWZhdWx0cy5zZXJ2aWNlJztcbmltcG9ydCB7IEphdmFzY3JpcHREZWZhdWx0c1NlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL2phdmFzY3JpcHQtZGVmYXVsdHMuc2VydmljZSc7XG5pbXBvcnQgeyBKc29uRGVmYXVsdHNTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9qc29uLWRlZmF1bHRzLnNlcnZpY2UnO1xuXG5leHBvcnQgZnVuY3Rpb24gc2V0dXBFZGl0b3JTZXJ2aWNlKHNlcnZpY2U6IENvZGVFZGl0b3JTZXJ2aWNlKSB7XG4gIHJldHVybiAoKSA9PiBzZXJ2aWNlLmxvYWRFZGl0b3IoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHByb3ZpZGVDb2RlRWRpdG9yKHNldHRpbmdzPzogQ29kZUVkaXRvclNldHRpbmdzKTogUHJvdmlkZXJbXSB7XG4gIHJldHVybiBbXG4gICAgeyBwcm92aWRlOiBFRElUT1JfU0VUVElOR1MsIHVzZVZhbHVlOiBzZXR0aW5ncyB9LFxuICAgIENvZGVFZGl0b3JTZXJ2aWNlLFxuICAgIFR5cGVzY3JpcHREZWZhdWx0c1NlcnZpY2UsXG4gICAgSmF2YXNjcmlwdERlZmF1bHRzU2VydmljZSxcbiAgICBKc29uRGVmYXVsdHNTZXJ2aWNlLFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IEFQUF9JTklUSUFMSVpFUixcbiAgICAgIHVzZUZhY3Rvcnk6IHNldHVwRWRpdG9yU2VydmljZSxcbiAgICAgIGRlcHM6IFtDb2RlRWRpdG9yU2VydmljZV0sXG4gICAgICBtdWx0aTogdHJ1ZSxcbiAgICB9LFxuICBdO1xufVxuXG4vKiogQGRlcHJlY2F0ZWQgdXNlIGBwcm92aWRlQ29kZUVkaXRvcihzZXR0aW5ncylgIGluc3RlYWQgKi9cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIENvZGVFZGl0b3JDb21wb25lbnRdLFxuICBleHBvcnRzOiBbQ29kZUVkaXRvckNvbXBvbmVudF0sXG59KVxuZXhwb3J0IGNsYXNzIENvZGVFZGl0b3JNb2R1bGUge1xuICBzdGF0aWMgZm9yUm9vdChcbiAgICBzZXR0aW5ncz86IENvZGVFZGl0b3JTZXR0aW5nc1xuICApOiBNb2R1bGVXaXRoUHJvdmlkZXJzPENvZGVFZGl0b3JNb2R1bGU+IHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IENvZGVFZGl0b3JNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgeyBwcm92aWRlOiBFRElUT1JfU0VUVElOR1MsIHVzZVZhbHVlOiBzZXR0aW5ncyB9LFxuICAgICAgICBDb2RlRWRpdG9yU2VydmljZSxcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IEFQUF9JTklUSUFMSVpFUixcbiAgICAgICAgICB1c2VGYWN0b3J5OiBzZXR1cEVkaXRvclNlcnZpY2UsXG4gICAgICAgICAgZGVwczogW0NvZGVFZGl0b3JTZXJ2aWNlXSxcbiAgICAgICAgICBtdWx0aTogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgfTtcbiAgfVxufVxuIl19